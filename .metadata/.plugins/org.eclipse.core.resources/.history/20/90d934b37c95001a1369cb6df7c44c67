package com.libraryapis2.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.libraryapis2.model.common.LibraryApiError;

@ControllerAdvice
public class LibraryControllerExceptionHandler  extends ResponseEntityExceptionHandler{
	
	@ExceptionHandler(LibraryResourceNotFoundException.class)
	public final ResponseEntity<LibraryApiError> handleLibraryResourceNotFoundException(
			LibraryResourceNotFoundException e, WebRequest webRequest) {
		
		return new ResponseEntity<>(new LibraryApiError(e.getTraceId(), e.getMessage()), HttpStatus.NOT_FOUND);
	}
			
	@ExceptionHandler(LibraryResourceAlreadyExistException.class)
	public final ResponseEntity<LibraryApiError> LibraryResourceAlreadyExistException(
			LibraryResourceAlreadyExistException e, WebRequest webRequest) {
		
		return new ResponseEntity<>(new LibraryApiError(e.getTraceId(), e.getMessage()), HttpStatus.NOT_FOUND);
	}		
			

}
